---

const {credencial,eventos,videos}=Astro.props
if (Astro.request.method === "PUT") {
  try {
    const data = await Astro.request.formData();
    const name = data.get("nombreApellido");
    const dni = data.get("dni");
    const email = data.get("email");
    const celular = data.get("celular");
    const cantInvitados = data.get("cantInvitados");
    const fetiiching = await fetch(`http://localhost:4321/api/credencial/${credencial.uid}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)  // Reemplazar 'nuevoEstado' con el nuevo estado deseado
    });

    const dataRes=await fetiiching.json()
    console.log(dataRes)
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<form
method="PUT"
class="flex flex-col items-center text-gray-700">
  <div
    class="border flex flex-col gap-3 items-center justify-between bg-white rounded-lg p-10 w-full my-5 text-sm"
  >
    <label
      for="nombreApellido"
      class="border flex items-center justify-between bg-white rounded-lg p-5 w-full gap-2 text-sm"
    >
      <p>Nombre y Apellido</p>
      <input
        type="text"
        id="nombreApellido"
        name="nombreApellido"
        required
        value={credencial.nombreApellido}
        class="rounded-lg ring-0 border p-2"
      />
    </label>
    <label
      for="dni"
      class="border flex items-center justify-between bg-white rounded-lg p-5 w-full gap-2 text-sm"
    >
      <p>DNI</p>
      <input
        type="number"
        value={credencial.dni}
        id="dni"
        name="dni"
        required
        class="rounded-lg ring-0 border p-2"
      />
    </label>
    <label
      for="celular"
      class="border flex items-center justify-between bg-white rounded-lg p-5 w-full gap-2 text-sm"
    >
      <p>Celular</p>
      <input
        value={credencial.celular}
        type="tel"
        id="celular"
        name="celular"
        required
        class="rounded-lg ring-0 border p-2"
      />
    </label>
    <label
      for="email"
      class="border flex items-center justify-between bg-white rounded-lg p-5 w-full gap-2 text-sm"
    >
      <p>email</p>
      <input
        value={credencial.email}
        type="email"
        id="email"
        name="email"
        required
        class="rounded-lg ring-0 border p-2"
      />
    </label>
    <label
      for="cantInvitados"
      class="border flex items-center justify-between bg-white rounded-lg p-5 w-full gap-2 text-sm"
    >
      <p>Cantidad de Invitados</p>
      <input
        value={credencial.invitados}
        type="number"
        id="cantInvitados"
        name="cantInvitados"
        required
        class="rounded-lg ring-0 border p-2"
      />
    </label>
  </div>

  {/* contenedores de eventos y videos  */}

  <div
    class="border flex flex-col gap-3 items-center justify-between bg-white rounded-lg p-5 w-full my-5 text-sm"
  >
    {/* selector de eventos */}
    <select
      name="eventoUID"
      id="eventos"
      required
      class="p-2 text-xs rounded-lg my-3 ring-0 border w-full"
    >
      <option
        value="noSelect"
        disabled
        selected
        class="text-sx p-2 rounded-lg font-medium text-gray-400"
      >
        Relacionar un Evento
      </option>
      {
        eventos?.map((event) => (
          <option value={event.uid}>{event.name}</option>
        ))
      }
    </select>
    {/* selector de videos segun evento correspondiente */}
    <select
      name="idVideos"
      id="idVideos"
      required
      class="p-2 text-xs rounded-lg my-3 ring-0 border w-full"
    >
      <option
        value="noSelect"
        disabled
        selected
        class="text-sx p-2 rounded-lg font-medium text-gray-400"
      >
        Relacionar un Video
      </option>
      {
        videos
          ?.filter((evento) => evento.uid == credencial.evento)[0]
          ?.videos?.map((video) => (
            <option value={video.id}>{video.name}</option>
          ))
      }
    </select>
    <button 
    class="disabled:bg-gray-200 cursor-pointer  border flex items-center justify-center hover:bg-blue-400 duration-200 hover:ring-2 bg-blue-500 text-white font-medium rounded-lg p-2 text-center w-2/3 gap-2 text-sm"
  >Modificar</button>
  </div>

  {
    credencial?.QRCode && (
      <div class="p-2 my-5 space-y-4 flex flex-col items-center">
        <p class="text-xs font-medium">
          Toca la imagen para descargar y usarla como quieras
        </p>
        <a
          class=" mx-auto cursor-pointer"
          href={credencial?.QRCode}
          download={credencial.nombreApellido}
        >
          {" "}
          <img
            alt="qrCode"
            src={credencial?.QRCode}
            width={100}
            height={100}
          />
        </a>
      </div>
    )
  }
</form>